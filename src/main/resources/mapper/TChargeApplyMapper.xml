<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.mapper.TChargeApplyMapper">
  <resultMap id="BaseResultMap" type="com.mall.model.TChargeApply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="attach" jdbcType="VARCHAR" property="attach" />
    <result column="bank_type" jdbcType="VARCHAR" property="bankType" />
    <result column="cash_fee" jdbcType="VARCHAR" property="cashFee" />
    <result column="fee_type" jdbcType="VARCHAR" property="feeType" />
    <result column="is_subscribe" jdbcType="VARCHAR" property="isSubscribe" />
    <result column="mch_id" jdbcType="VARCHAR" property="mchId" />
    <result column="nonce_str" jdbcType="VARCHAR" property="nonceStr" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="result_code" jdbcType="VARCHAR" property="resultCode" />
    <result column="return_code" jdbcType="VARCHAR" property="returnCode" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="time_end" jdbcType="VARCHAR" property="timeEnd" />
    <result column="total_fee" jdbcType="VARCHAR" property="totalFee" />
    <result column="trade_type" jdbcType="VARCHAR" property="tradeType" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_id, attach, bank_type, cash_fee, fee_type, is_subscribe, mch_id, 
    nonce_str, openid, out_trade_no, result_code, return_code, sign, time_end, total_fee, 
    trade_type, transaction_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.mall.model.TChargeApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_charge_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_charge_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_charge_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mall.model.TChargeApplyExample">
    delete from t_charge_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mall.model.TChargeApply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_charge_apply (user_id, order_id, attach, 
      bank_type, cash_fee, fee_type, 
      is_subscribe, mch_id, nonce_str, 
      openid, out_trade_no, result_code, 
      return_code, sign, time_end, 
      total_fee, trade_type, transaction_id, 
      create_time)
    values (#{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{attach,jdbcType=VARCHAR}, 
      #{bankType,jdbcType=VARCHAR}, #{cashFee,jdbcType=VARCHAR}, #{feeType,jdbcType=VARCHAR}, 
      #{isSubscribe,jdbcType=VARCHAR}, #{mchId,jdbcType=VARCHAR}, #{nonceStr,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{resultCode,jdbcType=VARCHAR}, 
      #{returnCode,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{timeEnd,jdbcType=VARCHAR}, 
      #{totalFee,jdbcType=VARCHAR}, #{tradeType,jdbcType=VARCHAR}, #{transactionId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.model.TChargeApply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_charge_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="attach != null">
        attach,
      </if>
      <if test="bankType != null">
        bank_type,
      </if>
      <if test="cashFee != null">
        cash_fee,
      </if>
      <if test="feeType != null">
        fee_type,
      </if>
      <if test="isSubscribe != null">
        is_subscribe,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
      <if test="nonceStr != null">
        nonce_str,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="resultCode != null">
        result_code,
      </if>
      <if test="returnCode != null">
        return_code,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="timeEnd != null">
        time_end,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="attach != null">
        #{attach,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null">
        #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="cashFee != null">
        #{cashFee,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null">
        #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="isSubscribe != null">
        #{isSubscribe,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="nonceStr != null">
        #{nonceStr,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="resultCode != null">
        #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="timeEnd != null">
        #{timeEnd,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mall.model.TChargeApplyExample" resultType="java.lang.Integer">
    select count(*) from t_charge_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_charge_apply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.attach != null">
        attach = #{record.attach,jdbcType=VARCHAR},
      </if>
      <if test="record.bankType != null">
        bank_type = #{record.bankType,jdbcType=VARCHAR},
      </if>
      <if test="record.cashFee != null">
        cash_fee = #{record.cashFee,jdbcType=VARCHAR},
      </if>
      <if test="record.feeType != null">
        fee_type = #{record.feeType,jdbcType=VARCHAR},
      </if>
      <if test="record.isSubscribe != null">
        is_subscribe = #{record.isSubscribe,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=VARCHAR},
      </if>
      <if test="record.nonceStr != null">
        nonce_str = #{record.nonceStr,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.resultCode != null">
        result_code = #{record.resultCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCode != null">
        return_code = #{record.returnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=VARCHAR},
      </if>
      <if test="record.timeEnd != null">
        time_end = #{record.timeEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null">
        trade_type = #{record.tradeType,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_charge_apply
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      attach = #{record.attach,jdbcType=VARCHAR},
      bank_type = #{record.bankType,jdbcType=VARCHAR},
      cash_fee = #{record.cashFee,jdbcType=VARCHAR},
      fee_type = #{record.feeType,jdbcType=VARCHAR},
      is_subscribe = #{record.isSubscribe,jdbcType=VARCHAR},
      mch_id = #{record.mchId,jdbcType=VARCHAR},
      nonce_str = #{record.nonceStr,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      result_code = #{record.resultCode,jdbcType=VARCHAR},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=VARCHAR},
      time_end = #{record.timeEnd,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=VARCHAR},
      trade_type = #{record.tradeType,jdbcType=VARCHAR},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.model.TChargeApply">
    update t_charge_apply
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="attach != null">
        attach = #{attach,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null">
        bank_type = #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="cashFee != null">
        cash_fee = #{cashFee,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null">
        fee_type = #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="isSubscribe != null">
        is_subscribe = #{isSubscribe,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="nonceStr != null">
        nonce_str = #{nonceStr,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="resultCode != null">
        result_code = #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="timeEnd != null">
        time_end = #{timeEnd,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.model.TChargeApply">
    update t_charge_apply
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      attach = #{attach,jdbcType=VARCHAR},
      bank_type = #{bankType,jdbcType=VARCHAR},
      cash_fee = #{cashFee,jdbcType=VARCHAR},
      fee_type = #{feeType,jdbcType=VARCHAR},
      is_subscribe = #{isSubscribe,jdbcType=VARCHAR},
      mch_id = #{mchId,jdbcType=VARCHAR},
      nonce_str = #{nonceStr,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      result_code = #{resultCode,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      time_end = #{timeEnd,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>